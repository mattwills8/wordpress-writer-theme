<?php
 if ( ! defined( 'ABSPATH' ) ) { exit; } if ( ! class_exists( 'ReduxFramework_button_set' ) ) { class ReduxFramework_button_set { static $_properties = array( 'id' => 'Identifier', ); function __construct( $field = array(), $value = '', $parent ) { $this->parent = $parent; $this->field = $field; $this->value = $value; } public function render() { if ( !empty( $this->field['data'] ) && empty( $this->field['options'] ) ) { if ( empty( $this->field['args'] ) ) { $this->field['args'] = array(); } $this->field['options'] = $this->parent->get_wordpress_data( $this->field['data'], $this->field['args'] ); if ( empty( $this->field['options'] ) ) { return; } } $is_multi = (isset( $this->field['multi'] ) && $this->field['multi'] == true) ? true: false; $name = $this->field['name'] . $this->field['name_suffix']; echo '<div class="buttonset ui-buttonset">'; if ($is_multi) { $s = ''; if (empty($this->value)) { $s = $name; } echo '<input type="hidden" data-name="' . $name . '" class="buttonset-empty" name="' . $s . '" value=""/>'; $name = $name . '[]'; } foreach ( $this->field['options'] as $k => $v ) { $selected = ''; if ( $is_multi ) { $post_value = ''; $type = "checkbox"; if ( ! empty( $this->value ) && ! is_array( $this->value ) ) { $this->value = array( $this->value ); } if ( is_array( $this->value ) && in_array( $k, $this->value ) ) { $selected = 'checked="checked"'; $post_value = $k; } } else { $type = "radio"; if ( is_scalar( $this->value ) ) { $selected = checked( $this->value, $k, false ); } } $the_val = $k; $the_name = $name; $data_val = ''; $multi_class = ''; if ($is_multi) { $the_val = ''; $the_name = ''; $data_val = ' data-val="' . $k . '"'; $hidden_name = $name; $multi_class = 'multi '; if ($post_value == '') { $hidden_name = ''; } echo '<input type="hidden" class="buttonset-check" id="' . $this->field['id'] . '-buttonset' . $k . '-hidden" name="' .$hidden_name . '" value="' . $post_value . '"/>'; } echo '<input' . $data_val . ' data-id="' . $this->field['id'] . '" type="' . $type . '" id="' . $this->field['id'] . '-buttonset' . $k . '" name="' . $the_name . '" class="buttonset-item ' . $multi_class . $this->field['class'] . '" value="' . $the_val . '" ' . $selected . '/>'; echo '<label for="' . $this->field['id'] . '-buttonset' . $k . '">' . $v . '</label>'; } echo '</div>'; } public function enqueue() { if (!wp_script_is ( 'redux-field-button-set-js' )) { wp_enqueue_script( 'redux-field-button-set-js', ReduxFramework::$_url . 'inc/fields/button_set/field_button_set' . Redux_Functions::isMin() . '.js', array( 'jquery', 'jquery-ui-core', 'redux-js' ), time(), true ); } } } }